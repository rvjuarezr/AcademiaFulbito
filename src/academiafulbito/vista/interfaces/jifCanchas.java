/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jifCategorias.java
 *
 * Created on 02/08/2024, 02:42:40 PM
 */

package academiafulbito.vista.interfaces;

import academiafulbito.controlador.beans.CanchaFacade;
import academiafulbito.modelo.entidades.Cancha;
import academiafulbito.vista.utilidades.ButtonEditor;
import academiafulbito.vista.utilidades.ButtonRenderer;
import academiafulbito.vista.utilidades.Utils;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JCheckBox;
import javax.swing.JDesktopPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ronald J
 */
public class jifCanchas extends javax.swing.JInternalFrame {

    JDesktopPane jdp;
    public static CanchaFacade canchaFacade;
    DefaultTableModel modelo;
    /** Creates new form jifCategorias */
    public jifCanchas(JDesktopPane jdpModAF){
        initComponents();
        jdp=jdpModAF;
        int[] anchoColumnas = {15, 55, 20, 80}; // Anchos específicos para cada columna
        jfPrincipal.utils.setAnchoColumnas(tblCancha, anchoColumnas);
        jfPrincipal.utils.ocultarColumnas(tblCancha, 0);
        canchaFacade = new CanchaFacade();
        listarCanchas(canchaFacade.getListadoCanchas());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tphCancha = new org.edisoncor.gui.tabbedPane.TabbedPaneHeader();
        panel1 = new org.edisoncor.gui.panel.Panel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCancha = new javax.swing.JTable();
        panel2 = new org.edisoncor.gui.panel.Panel();

        setClosable(true);
        setTitle("MANTENIMIENTO CANCHAS");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel1.setColorPrimario(new java.awt.Color(255, 255, 255));
        panel1.setColorSecundario(new java.awt.Color(51, 51, 255));
        panel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblCancha.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "CANCHA", "ID_LUGAR", "Acciones"
            }
        ));
        jScrollPane1.setViewportView(tblCancha);

        panel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 620, 250));

        tphCancha.addTab("LISTADO", panel1);

        panel2.setColorPrimario(new java.awt.Color(255, 255, 255));
        panel2.setColorSecundario(new java.awt.Color(51, 51, 255));
        panel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        tphCancha.addTab("CANCHAS", panel2);

        getContentPane().add(tphCancha, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, 300));

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private org.edisoncor.gui.panel.Panel panel1;
    private org.edisoncor.gui.panel.Panel panel2;
    private javax.swing.JTable tblCancha;
    private org.edisoncor.gui.tabbedPane.TabbedPaneHeader tphCancha;
    // End of variables declaration//GEN-END:variables

    private void listarCanchas(List<Cancha> listaCanchas){
        // Selecciona el primer tab en un JTabbedPane
        tphCancha.setSelectedIndex(0);

        // Obtiene el modelo de la tabla
        modelo=(DefaultTableModel)tblCancha.getModel();

        // limpia los datos existentes en la tabla.
        Utils.limpiarModeloTabla(modelo, tblCancha);

        // Verificar si la lista de socios tiene elementos
        if (listaCanchas.size() > 0) {
            System.out.println("LISTADO DE CANCHAS DESDE LA BBDD");
            // Iterar sobre la lista de categorias y agregar cada categoria a la tabla
            for (Cancha cancha : listaCanchas) {

                System.out.println("cancha.getIdCancha():"+cancha.getIdCancha()+" ,cancha.getNombre():"+cancha.getNombre()+" ,cancha.getIdLugar():"+cancha.getIdLugar());

                // Crea un array de objetos con los datos de la categoria para agregar a la tabla.
                Object[] fila = new Object[]{
                    cancha.getIdCancha(),
                    cancha.getNombre(),
                    cancha.getIdLugar()
                };
                modelo.addRow(fila); // Agregar la fila al modelo de la tabla
            }
            // Establece un renderizador personalizado para las celdas de la tabla.
            tblCancha.setDefaultRenderer(Object.class, new Utils(18));

            // Agregar botones en la última columna
            tblCancha.getColumn("Acciones").setCellRenderer(new ButtonRenderer("Acciones"));
            tblCancha.getColumn("Acciones").setCellEditor(new ButtonEditor("Acciones"));

            // Establece el modo de selección de filas para permitir solo una selección a la vez.
            tblCancha.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        }
    }
}
