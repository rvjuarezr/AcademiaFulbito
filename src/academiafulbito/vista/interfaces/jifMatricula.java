/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jifMatricula.java
 *
 * Created on 27/09/2024, 08:42:30 PM
 */

package academiafulbito.vista.interfaces;

import academiafulbito.controlador.beans.AlumnoFacade;
import academiafulbito.controlador.beans.HorarioFacade;
import academiafulbito.controlador.beans.MatriculaFacade;
import academiafulbito.modelo.entidades.Matricula;
import java.math.BigDecimal;
import java.util.Calendar;
import java.util.List;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import academiafulbito.modelo.entidades.Alumno;
import academiafulbito.vista.utilidades.LiteralesTexto;
import academiafulbito.vista.utilidades.Utils;
import java.util.Date;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;

/**
 *
 * @author Ronald J
 */
public class jifMatricula extends javax.swing.JInternalFrame {

    /** Creates new form jifMatricula */
    JDesktopPane jDesktopPane;
    public static Alumno alumno ;

    int indicador;//para saber si estamos en modo de edicion

    private int idSeleccionada; // Variable para almacenar la ID del alumno seleccionado
    private int paginaActual = 1;
    private int tamanioPagina = 10;//para el paginado de tabla
    private int totalPaginas;
    private MatriculaFacade matriculaFacade;
    private AlumnoFacade alumnosFacade;
    private HorarioFacade horarioFacade;
    DefaultTableModel modelo;
    String[] nombreColumnas = {
        LiteralesTexto.LITERAL_ID,
        LiteralesTexto.LITERAL_ID,//alumnos
        LiteralesTexto.LITERAL_NOMBRE,
        LiteralesTexto.LITERAL_APELLIDO,
        LiteralesTexto.LITERAL_FECHA_NACIMIENTO,
        LiteralesTexto.LITERAL_COLUMNA_CATEGORIA,
        LiteralesTexto.LITERAL_NOMBRE,
        LiteralesTexto.LITERAL_TELEFONO,
        LiteralesTexto.LITERAL_ID,//horarios
        LiteralesTexto.LITERAL_DIA,
        LiteralesTexto.LITERAL_HORA_INI,
        LiteralesTexto.LITERAL_HORA_FIN,
        LiteralesTexto.LITERAL_NOMBRE,
        LiteralesTexto.LITERAL_NOMBRE,
        LiteralesTexto.LITERAL_NOMBRE,
        LiteralesTexto.LITERAL_TELEFONO,
        LiteralesTexto.LITERAL_OBSERVACIONES,
        LiteralesTexto.LITERAL_CODIGO_BARRAS,
        LiteralesTexto.LITERAL_MONTO_PAGO,
        LiteralesTexto.LITERAL_FECHA_PAGO,
        LiteralesTexto.LITERAL_VER,
        LiteralesTexto.LITERAL_EDITAR,
        LiteralesTexto.LITERAL_ELIMINAR
    };

    public jifMatricula(JDesktopPane jdpModAF) {
        initComponents();
        jDesktopPane = jdpModAF;
        Utils.cargarComboEstadoPago(jcbEstadoPago);
        Utils.cargarComboSexo(jcbSexo);
        accionBotones(false, false, false, false);
        matriculaFacade = new MatriculaFacade();
        alumnosFacade = new AlumnoFacade();
        horarioFacade = new HorarioFacade();
        listarMatriculas(paginaActual, tamanioPagina);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tphMatricula = new javax.swing.JTabbedPane();
        jpListado = new javax.swing.JPanel();
        btnNuevaMatricula = new org.edisoncor.gui.button.ButtonRound();
        lblPaginaActual = new javax.swing.JLabel();
        btnAnterior = new org.edisoncor.gui.button.ButtonRound();
        btnSiguiente = new org.edisoncor.gui.button.ButtonRound();
        jspMatricula = new javax.swing.JScrollPane();
        tblMatriculas = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        btnGuardar = new org.edisoncor.gui.button.ButtonRound();
        jPanel1 = new javax.swing.JPanel();
        btnConsultarMatricula = new org.edisoncor.gui.button.ButtonRound();
        txtDniAlumno = new org.edisoncor.gui.textField.TextFieldRoundBackground();
        jPanel3 = new javax.swing.JPanel();
        txtNombresAlumno = new org.edisoncor.gui.textField.TextFieldRoundBackground();
        jLabel3 = new javax.swing.JLabel();
        txtIdAlumno = new org.edisoncor.gui.textField.TextFieldRoundBackground();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtApellidosMatricula = new org.edisoncor.gui.textField.TextFieldRoundBackground();
        jLabel6 = new javax.swing.JLabel();
        txtFechaNac = new org.edisoncor.gui.textField.TextFieldRoundBackground();
        jLabel7 = new javax.swing.JLabel();
        txtNacionalidadAlumno = new org.edisoncor.gui.textField.TextFieldRoundBackground();
        txtEdadAlumno = new org.edisoncor.gui.textField.TextFieldRoundBackground();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtTelefPadre = new org.edisoncor.gui.textField.TextFieldRoundBackground();
        txtNombresPadre = new org.edisoncor.gui.textField.TextFieldRoundBackground();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtCategoriaAlumno = new org.edisoncor.gui.textField.TextFieldRoundBackground();
        jcbSexo = new org.edisoncor.gui.comboBox.ComboBoxRound();
        jPanel4 = new javax.swing.JPanel();
        lblFotoAlumno = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        txtDiasHorarioProf = new org.edisoncor.gui.textField.TextFieldRoundBackground();
        jLabel15 = new javax.swing.JLabel();
        txtNombresProf = new org.edisoncor.gui.textField.TextFieldRoundBackground();
        txtTelefProfesor = new org.edisoncor.gui.textField.TextFieldRoundBackground();
        jLabel18 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        btnBuscarHorario = new javax.swing.JButton();
        txtLugarEntrenamiento = new org.edisoncor.gui.textField.TextFieldRoundBackground();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtCancha = new org.edisoncor.gui.textField.TextFieldRoundBackground();
        txtIdHorario = new org.edisoncor.gui.textField.TextFieldRoundBackground();
        jLabel23 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jdchFechaMatricula = new com.toedter.calendar.JDateChooser();
        jLabel19 = new javax.swing.JLabel();
        txtMontoPago = new org.edisoncor.gui.textField.TextFieldRoundBackground();
        txtCodBarras = new org.edisoncor.gui.textField.TextFieldRoundBackground();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taObervaciones = new javax.swing.JTextArea();
        jLabel20 = new javax.swing.JLabel();
        jcbEstadoPago = new org.edisoncor.gui.comboBox.ComboBoxRound();
        jLabel21 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("MATRICULA DEL ALUMNO");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tphMatricula.setFont(new java.awt.Font("Bookman Old Style", 1, 24));

        jpListado.setBackground(new java.awt.Color(255, 255, 255));
        jpListado.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnNuevaMatricula.setBackground(new java.awt.Color(156, 156, 247));
        btnNuevaMatricula.setText("+ MATRICULA");
        btnNuevaMatricula.setFont(new java.awt.Font("Arial", 1, 18));
        btnNuevaMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaMatriculaActionPerformed(evt);
            }
        });
        jpListado.add(btnNuevaMatricula, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 10, 140, 50));

        lblPaginaActual.setFont(new java.awt.Font("Bookman Old Style", 1, 24));
        lblPaginaActual.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPaginaActual.setText("10");
        jpListado.add(lblPaginaActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 500, 220, 50));

        btnAnterior.setBackground(new java.awt.Color(204, 204, 204));
        btnAnterior.setForeground(new java.awt.Color(51, 51, 51));
        btnAnterior.setText("<<");
        btnAnterior.setFont(new java.awt.Font("Arial", 1, 24));
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });
        jpListado.add(btnAnterior, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 500, -1, 50));

        btnSiguiente.setBackground(new java.awt.Color(204, 204, 204));
        btnSiguiente.setForeground(new java.awt.Color(51, 51, 51));
        btnSiguiente.setText(">>");
        btnSiguiente.setFont(new java.awt.Font("Arial", 1, 24));
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });
        jpListado.add(btnSiguiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 500, -1, 50));

        tblMatriculas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));        
        tblMatriculas.setOpaque(false);
        jspMatricula.setViewportView(tblMatriculas);

        jpListado.add(jspMatricula, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 1180, 420));

        tphMatricula.addTab("LISTADO", jpListado);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 204));
        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 1, 36));
        jLabel1.setForeground(new java.awt.Color(103, 98, 98));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("NUEVA MATRICULA");
        jLabel1.setOpaque(true);
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 0, 430, 30));

        btnCancelar.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/academiafulbito/vista/imagenes/volver.png"))); // NOI18N
        btnCancelar.setText("VOLVER");
        btnCancelar.setContentAreaFilled(false);
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel2.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 30, 190, 70));

        btnGuardar.setBackground(new java.awt.Color(156, 156, 247));
        btnGuardar.setBorder(null);
        btnGuardar.setText("AÑADIR");
        btnGuardar.setBorderPainted(true);
        btnGuardar.setContentAreaFilled(true);
        btnGuardar.setEnabled(false);
        btnGuardar.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel2.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 30, 170, 70));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 204), 1, true), "Busqueda del Alumno", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bookman Old Style", 0, 14))); // NOI18N
        jPanel1.setOpaque(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnConsultarMatricula.setBackground(new java.awt.Color(156, 156, 247));
        btnConsultarMatricula.setText("CONSULTAR");
        btnConsultarMatricula.setEnabled(false);
        btnConsultarMatricula.setFont(new java.awt.Font("Arial", 1, 18));
        btnConsultarMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarMatriculaActionPerformed(evt);
            }
        });
        jPanel1.add(btnConsultarMatricula, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, 140, 50));

        txtDniAlumno.setBackground(new java.awt.Color(255, 255, 204));
        txtDniAlumno.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtDniAlumno.setEditable(false);
        txtDniAlumno.setDescripcion("DNI ALUMNO");
        txtDniAlumno.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        txtDniAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDniAlumnoActionPerformed(evt);
            }
        });
        txtDniAlumno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDniAlumnoKeyTyped(evt);
            }
        });
        jPanel1.add(txtDniAlumno, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 160, 50));

        jPanel2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 330, 100));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 204), 1, true), "Datos del Alumno", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bookman Old Style", 0, 12))); // NOI18N
        jPanel3.setOpaque(false);
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNombresAlumno.setBackground(new java.awt.Color(255, 255, 204));
        txtNombresAlumno.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtNombresAlumno.setEditable(false);
        txtNombresAlumno.setDescripcion("NOMBRES");
        txtNombresAlumno.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        txtNombresAlumno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombresAlumnoKeyTyped(evt);
            }
        });
        jPanel3.add(txtNombresAlumno, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 220, 50));

        jLabel3.setText("NOMBRES:");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 160, 20));

        txtIdAlumno.setBackground(new java.awt.Color(255, 255, 204));
        txtIdAlumno.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtIdAlumno.setEditable(false);
        txtIdAlumno.setDescripcion("ID");
        txtIdAlumno.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        txtIdAlumno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdAlumnoKeyTyped(evt);
            }
        });
        jPanel3.add(txtIdAlumno, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 70, 50));

        jLabel4.setText("ID:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 40, 20));

        jLabel5.setText("APELLIDOS:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 160, 20));

        jLabel6.setText("FEC. NAC");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 20, 60, 20));

        txtFechaNac.setBackground(new java.awt.Color(255, 255, 204));
        txtFechaNac.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtFechaNac.setEditable(false);
        txtFechaNac.setDescripcion("DD-MM-YYYY");
        txtFechaNac.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        txtFechaNac.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFechaNacKeyTyped(evt);
            }
        });
        jPanel3.add(txtFechaNac, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 40, 170, 50));

        jLabel7.setText("NACIONALIDAD:");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 280, 20));

        txtNacionalidadAlumno.setBackground(new java.awt.Color(255, 255, 204));
        txtNacionalidadAlumno.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtNacionalidadAlumno.setEditable(false);
        txtNacionalidadAlumno.setDescripcion("NACIONALIDAD");
        txtNacionalidadAlumno.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        txtNacionalidadAlumno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNacionalidadAlumnoKeyTyped(evt);
            }
        });
        jPanel3.add(txtNacionalidadAlumno, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 290, 50));

        txtEdadAlumno.setBackground(new java.awt.Color(255, 255, 204));
        txtEdadAlumno.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtEdadAlumno.setEditable(false);
        txtEdadAlumno.setDescripcion("EDAD");
        txtEdadAlumno.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        txtEdadAlumno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEdadAlumnoKeyTyped(evt);
            }
        });
        jPanel3.add(txtEdadAlumno, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 110, 110, 50));

        jLabel8.setText("SEXO");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 90, 100, 20));

        jLabel9.setText("NOMBRES Y APELLIDOS DEL PADRE");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 280, 20));

        jLabel10.setText("TELEF. PADRE");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 160, 100, 20));

        txtTelefPadre.setBackground(new java.awt.Color(255, 255, 204));
        txtTelefPadre.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtTelefPadre.setEditable(false);
        txtTelefPadre.setDescripcion("TELEF. PADRE");
        txtTelefPadre.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        txtTelefPadre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefPadreKeyTyped(evt);
            }
        });
        jPanel3.add(txtTelefPadre, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 180, 180, 50));

        txtNombresPadre.setBackground(new java.awt.Color(255, 255, 204));
        txtNombresPadre.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtNombresPadre.setEditable(false);
        txtNombresPadre.setDescripcion("NOMBRES Y APELLIDOS DEL PADRE");
        txtNombresPadre.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        txtNombresPadre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombresPadreKeyTyped(evt);
            }
        });
        jPanel3.add(txtNombresPadre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 800, 50));

        jLabel11.setText("EDAD");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 90, 100, 20));

        jLabel12.setText("CATEGORIA:");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 90, 180, 20));

        txtCategoriaAlumno.setBackground(new java.awt.Color(255, 255, 204));
        txtCategoriaAlumno.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtCategoriaAlumno.setEditable(false);
        txtCategoriaAlumno.setDescripcion("CATEGORIA");
        txtCategoriaAlumno.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        txtCategoriaAlumno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCategoriaAlumnoKeyTyped(evt);
            }
        });
        jPanel3.add(txtCategoriaAlumno, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 400, 50));

        jcbSexo.setBackground(new java.awt.Color(255, 255, 204));
        jcbSexo.setEnabled(false);
        jcbSexo.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        jcbSexo.setOpaque(true);
        jPanel3.add(jcbSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 110, 180, 50));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 1000, 240));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 204), 1, true), "Foto Alumno", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bookman Old Style", 0, 12))); // NOI18N
        jPanel4.setOpaque(false);
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel4.add(lblFotoAlumno, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 170, 210));

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 100, 190, 240));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 255), 1, true), "Horarios y Datos de Entrenamiento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bookman Old Style", 0, 12))); // NOI18N
        jPanel5.setOpaque(false);
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtDiasHorarioProf.setBackground(new java.awt.Color(255, 255, 204));
        txtDiasHorarioProf.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtDiasHorarioProf.setEditable(false);
        txtDiasHorarioProf.setDescripcion("DIAS Y HORARIOS");
        txtDiasHorarioProf.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        txtDiasHorarioProf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDiasHorarioProfKeyTyped(evt);
            }
        });
        jPanel5.add(txtDiasHorarioProf, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 350, 50));

        jLabel15.setText("HORARIO:");
        jPanel5.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 160, 20));

        txtNombresProf.setBackground(new java.awt.Color(255, 255, 204));
        txtNombresProf.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtNombresProf.setEditable(false);
        txtNombresProf.setDescripcion("NOMBRES Y APELLIDOS PROFESOR");
        txtNombresProf.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        txtNombresProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombresProfActionPerformed(evt);
            }
        });
        txtNombresProf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombresProfKeyTyped(evt);
            }
        });
        jPanel5.add(txtNombresProf, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 510, 50));

        txtTelefProfesor.setBackground(new java.awt.Color(255, 255, 204));
        txtTelefProfesor.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtTelefProfesor.setEditable(false);
        txtTelefProfesor.setDescripcion("TELEF. PROF.");
        txtTelefProfesor.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        txtTelefProfesor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefProfesorKeyTyped(evt);
            }
        });
        jPanel5.add(txtTelefProfesor, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 110, 190, 50));

        jLabel18.setText("TELEF. PROFESOR");
        jPanel5.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 90, 100, 20));

        jLabel22.setText("NOMBRES Y APELLIDOS DEL PROFESOR");
        jPanel5.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 230, 20));

        btnBuscarHorario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/academiafulbito/vista/imagenes/buscar.png"))); // NOI18N
        btnBuscarHorario.setContentAreaFilled(false);
        btnBuscarHorario.setEnabled(false);
        btnBuscarHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarHorarioActionPerformed(evt);
            }
        });
        jPanel5.add(btnBuscarHorario, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, 50, 50));

        txtLugarEntrenamiento.setBackground(new java.awt.Color(255, 255, 204));
        txtLugarEntrenamiento.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtLugarEntrenamiento.setEditable(false);
        txtLugarEntrenamiento.setDescripcion("LUGAR ENTRENAM.");
        txtLugarEntrenamiento.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        txtLugarEntrenamiento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLugarEntrenamientoKeyTyped(evt);
            }
        });
        jPanel5.add(txtLugarEntrenamiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 40, 290, 50));

        jLabel13.setText("LUGAR DE ENTRENAMIENTO:");
        jPanel5.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 20, 170, 20));

        jLabel14.setText("CANCHA:");
        jPanel5.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 20, 160, 20));

        txtCancha.setBackground(new java.awt.Color(255, 255, 204));
        txtCancha.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtCancha.setEditable(false);
        txtCancha.setDescripcion("CANCHA");
        txtCancha.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        txtCancha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCanchaKeyTyped(evt);
            }
        });
        jPanel5.add(txtCancha, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 40, 220, 50));

        txtIdHorario.setBackground(new java.awt.Color(255, 255, 204));
        txtIdHorario.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtIdHorario.setEditable(false);
        txtIdHorario.setDescripcion("ID");
        txtIdHorario.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        txtIdHorario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdHorarioKeyTyped(evt);
            }
        });
        jPanel5.add(txtIdHorario, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 70, 50));

        jLabel23.setText("ID:");
        jPanel5.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 40, 20));

        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 1000, 170));

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 204), 1, true), "Datos Matricula", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bookman Old Style", 0, 12))); // NOI18N
        jPanel6.setOpaque(false);
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setText("FECHA DE MATRICULA");
        jPanel6.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 140, 20));

		jLabel19.setText("MONTO DE PAGO");
        jPanel6.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 100, 20));

        txtMontoPago.setBackground(new java.awt.Color(255, 255, 204));
        txtMontoPago.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtMontoPago.setEditable(false);
        txtMontoPago.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtMontoPago.setDescripcion("S/ 0.00");
        txtMontoPago.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        txtMontoPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMontoPagoActionPerformed(evt);
            }
        });
        txtMontoPago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMontoPagoKeyTyped(evt);
            }
        });
        jPanel6.add(txtMontoPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 170, 50));

        jPanel2.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 340, 190, 170));

        txtCodBarras.setBackground(new java.awt.Color(255, 255, 204));
        txtCodBarras.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtCodBarras.setEditable(false);
        txtCodBarras.setDescripcion("COD. BARRAS");
        txtCodBarras.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        txtCodBarras.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodBarrasKeyTyped(evt);
            }
        });
        jPanel2.add(txtCodBarras, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 510, 200, 50));

        jLabel16.setText("OBSERVACIONES:");
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, 110, 50));

        taObervaciones.setColumns(20);
        taObervaciones.setRows(5);
        jScrollPane1.setViewportView(taObervaciones);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 510, 390, 50));

        jLabel20.setText("ESTADO DEL PAGO:");
        jPanel2.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 510, 110, 50));

        jcbEstadoPago.setBackground(new java.awt.Color(255, 255, 204));
        jcbEstadoPago.setEnabled(false);
        jcbEstadoPago.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        jcbEstadoPago.setOpaque(true);
        jPanel2.add(jcbEstadoPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 510, 220, 50));

        jLabel21.setText("CODIGO DE BARRAS:");
        jPanel2.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 510, 120, 50));

        tphMatricula.addTab("REGISTRO", jPanel2);

        getContentPane().add(tphMatricula, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1210, 610));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevaMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaMatriculaActionPerformed
        // TODO add your handling code here:
        indicador = 0;//para poder guardar
        tphMatricula.setSelectedIndex(1);
        limpiarCampos();
        habilitarCampos(true);
        accionBotones(true, true, true, true);
}//GEN-LAST:event_btnNuevaMatriculaActionPerformed

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        // TODO add your handling code here:
        if (paginaActual > 1) {
            paginaActual--;
            //listarMatriculas(Utils.cargarPaginado(paginaActual, tamanioPagina, lblPaginaActual, jfPrincipal.menuCategorias));
            listarMatriculas(paginaActual, tamanioPagina);

        }
}//GEN-LAST:event_btnAnteriorActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        // TODO add your handling code here:
        if (paginaActual < totalPaginas) {
            paginaActual++;
            listarMatriculas(paginaActual, tamanioPagina);

        }
}//GEN-LAST:event_btnSiguienteActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        limpiarCampos();
        habilitarCampos(false);
        tphMatricula.setSelectedIndex(0);
        accionBotones(false, false, false, false);
}//GEN-LAST:event_btnCancelarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        try {
            if (validarDatosMatricula()) {
                String cadenaMensaje = 0 == indicador ? LiteralesTexto.ESTA_SEGURO_GUARDAR_NUEVO_REGISTRO : LiteralesTexto.ESTA_SEGURO_MODIFICAR_REGISTRO;
                if (Utils.mensajeConfirmacion(cadenaMensaje) == JOptionPane.YES_OPTION) {
                    Matricula matricula;
                    switch (indicador) {
                        case 0://registrar horario
                            matricula = new Matricula();
                            matriculaFacade.guardarMatricula(getDatosMatricula(matricula));
                            Utils.mensajeInformacion(LiteralesTexto.REGISTRO_GUARDADO_CORRECTAMENTE);
                            break;
                        case 1://actualizar horario
                            matricula = matriculaFacade.findMatriculaById(idSeleccionada);
                            if(matricula != null){
                                matriculaFacade.actualizarMatricula(getDatosMatricula(matricula));
                                Utils.mensajeInformacion(LiteralesTexto.REGISTRO_ACTUALIZADO_CORRECTAMENTE);

                            } else{
                                Utils.mensajeError(LiteralesTexto.ERROR_AL_ACTUALIZAR_EL_REGISTRO);
                            }

                            break;
                    }

                    listarMatriculas(paginaActual, tamanioPagina);
                    limpiarCampos();
                    habilitarCampos(false);
                    accionBotones(false, false, false, false);
                    btnGuardar.setText("Añadir");
                    indicador = 0;
                    tphMatricula.setSelectedIndex(0);
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
}//GEN-LAST:event_btnGuardarActionPerformed

    private void txtNombresAlumnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresAlumnoKeyTyped
        // TODO add your handling code here:
}//GEN-LAST:event_txtNombresAlumnoKeyTyped

    private void btnConsultarMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarMatriculaActionPerformed
        // TODO add your handling code here:
        mostarDatosAlumno(txtDniAlumno.getText());
    }//GEN-LAST:event_btnConsultarMatriculaActionPerformed

    private void txtDniAlumnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniAlumnoKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        // Permitir solo dígitos y hasta 2 caracteres
        if (!Character.isDigit(c) || txtDniAlumno.getText().length() >= 12) {
            evt.consume(); // Ignorar el evento de tecla
        }
    }//GEN-LAST:event_txtDniAlumnoKeyTyped

    private void txtIdAlumnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdAlumnoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdAlumnoKeyTyped


    private void txtApellidosAlumnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidosAlumnoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidosAlumnoKeyTyped


    private void txtFechaNacKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaNacKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaNacKeyTyped

    private void txtNacionalidadAlumnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNacionalidadAlumnoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNacionalidadAlumnoKeyTyped

    private void txtEdadAlumnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEdadAlumnoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEdadAlumnoKeyTyped

    private void txtTelefPadreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefPadreKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefPadreKeyTyped

    private void txtNombresPadreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresPadreKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombresPadreKeyTyped

    private void txtCategoriaAlumnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCategoriaAlumnoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCategoriaAlumnoKeyTyped

    private void txtLugarEntrenamientoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLugarEntrenamientoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLugarEntrenamientoKeyTyped

    private void txtCanchaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCanchaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCanchaKeyTyped

    private void txtDiasHorarioProfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiasHorarioProfKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiasHorarioProfKeyTyped

    private void txtNombresProfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresProfKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombresProfKeyTyped

    private void txtTelefProfesorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefProfesorKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefProfesorKeyTyped

    private void txtMontoPagoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMontoPagoKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        String valorMonto = txtMontoPago.getText();

        // Permitir solo dígitos, un punto decimal y evitar más de un punto decimal
        if (!Character.isDigit(c) && c != '.') {
            evt.consume(); // Ignorar el evento de tecla
        }

        // Si ya existe un punto decimal, no permitir más de uno
        if (c == '.' && valorMonto.contains(".")) {
            evt.consume(); // Ignorar el evento de tecla
        }

        // Limitar el número total de caracteres (5 antes del punto decimal)
        if (valorMonto.length() >= 7) {
            evt.consume(); // Limitar a 7 caracteres (ej. 999.99)
        }

        // Limitar a 2 decimales si ya hay un punto
        String texto = valorMonto;
        int puntoPos = texto.indexOf(".");
        if (puntoPos != -1 && texto.substring(puntoPos + 1).length() >= 2) {
            evt.consume(); // Ignorar si hay más de 2 decimales
        }
    }//GEN-LAST:event_txtMontoPagoKeyTyped

    private void txtCodBarrasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodBarrasKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodBarrasKeyTyped

    private void btnBuscarHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarHorarioActionPerformed
        // TODO add your handling code here:
        if (jfPrincipal.menuCategorias == null || jfPrincipal.menuCategorias.isClosed()) {
            jfPrincipal.menuCategorias = new jifCategorias(jDesktopPane); // Instanciamos la ventana de Categorías
            // Llamamos al método para gestionar la visualización
            Utils.visualizarInternalFrame(jfPrincipal.menuCategorias, jDesktopPane);
        }
        jfPrincipal.menuCategorias.permiteSelFila=0;//este valor permite seleccionar con un clic en la fila de la tabla de categorias
        jfPrincipal.menuCategorias.toFront(); // Traer al frente
}//GEN-LAST:event_btnBuscarHorarioActionPerformed

    private void txtIdHorarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdHorarioKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdHorarioKeyTyped

    private void txtMontoPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMontoPagoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMontoPagoActionPerformed

    private void txtNombresProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombresProfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombresProfActionPerformed

    private void txtDniAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDniAlumnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDniAlumnoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.edisoncor.gui.button.ButtonRound btnAnterior;
    private javax.swing.JButton btnBuscarHorario;
    private javax.swing.JButton btnCancelar;
    private org.edisoncor.gui.button.ButtonRound btnConsultarMatricula;
    private org.edisoncor.gui.button.ButtonRound btnGuardar;
    private org.edisoncor.gui.button.ButtonRound btnNuevaMatricula;
    private org.edisoncor.gui.button.ButtonRound btnSiguiente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private org.edisoncor.gui.comboBox.ComboBoxRound jcbEstadoPago;
    private org.edisoncor.gui.comboBox.ComboBoxRound jcbSexo;
    private com.toedter.calendar.JDateChooser jdchFechaMatricula;
    private javax.swing.JPanel jpListado;
    private javax.swing.JScrollPane jspMatricula;
    private javax.swing.JLabel lblFotoAlumno;
    private javax.swing.JLabel lblPaginaActual;
    private javax.swing.JTextArea taObervaciones;
    private javax.swing.JTable tblMatriculas;
    private javax.swing.JTabbedPane tphMatricula;
    public static org.edisoncor.gui.textField.TextFieldRoundBackground txtApellidosMatricula;
    public static org.edisoncor.gui.textField.TextFieldRoundBackground txtCancha;
    public static org.edisoncor.gui.textField.TextFieldRoundBackground txtCategoriaAlumno;
    public static org.edisoncor.gui.textField.TextFieldRoundBackground txtCodBarras;
    public static org.edisoncor.gui.textField.TextFieldRoundBackground txtDiasHorarioProf;
    public static org.edisoncor.gui.textField.TextFieldRoundBackground txtDniAlumno;
    public static org.edisoncor.gui.textField.TextFieldRoundBackground txtEdadAlumno;
    public static org.edisoncor.gui.textField.TextFieldRoundBackground txtFechaNac;
    public static org.edisoncor.gui.textField.TextFieldRoundBackground txtIdAlumno;
    public static org.edisoncor.gui.textField.TextFieldRoundBackground txtIdHorario;
    public static org.edisoncor.gui.textField.TextFieldRoundBackground txtLugarEntrenamiento;
    public static org.edisoncor.gui.textField.TextFieldRoundBackground txtMontoPago;
    public static org.edisoncor.gui.textField.TextFieldRoundBackground txtNacionalidadAlumno;
    public static org.edisoncor.gui.textField.TextFieldRoundBackground txtNombresAlumno;
    public static org.edisoncor.gui.textField.TextFieldRoundBackground txtNombresPadre;
    public static org.edisoncor.gui.textField.TextFieldRoundBackground txtNombresProf;
    public static org.edisoncor.gui.textField.TextFieldRoundBackground txtTelefPadre;
    public static org.edisoncor.gui.textField.TextFieldRoundBackground txtTelefProfesor;
    // End of variables declaration//GEN-END:variables

    private void accionBotones(boolean a, boolean b, boolean c, boolean d) {
        btnCancelar.setEnabled(a);
        btnGuardar.setEnabled(b);
        btnConsultarMatricula.setEnabled(c);
        btnBuscarHorario.setEnabled(d);
    }

    private boolean validarDatosMatricula(){
        /*if(!validarCampo(txtIdAlumno.getText(), LiteralesTexto.ERROR_ID_CAMPO_VACIO)){
            return false;
        }

        if(!validarCampo(txtIdHorario.getText(), LiteralesTexto.ERROR_ID_CAMPO_VACIO)){
            return false;
        }*/

        if(!validarCampo(txtMontoPago.getText(), LiteralesTexto.ERROR_MONTO_NO_VALIDO)){
            return false;
        }

        Date fechaSeleccionada = jdchFechaMatricula.getDate();
        if (fechaSeleccionada == null) {
            Utils.mensajeError(LiteralesTexto.ERROR_FECHA_NO_VALIDA);
            return false;
        }

        if (!validarFecha(fechaSeleccionada)) return false;

        return true;
    }

    private boolean validarCampo(String valor, String mensajeError) {
        if (!Utils.validarCadena(valor)) {
            Utils.mensajeError(mensajeError);
            return false;
        }
        return true;
    }

    private boolean validarFecha(Date fechaSeleccionada) {

        /*Utiliza Calendar para establecer la fecha seleccionada y la fecha de hoy a medianoche,
         asegurando así que la comparación se haga solo sobre la parte de la fecha
         (sin horas, minutos, segundos o milisegundos).*/
        Calendar calFechaSeleccionada = Calendar.getInstance();
        calFechaSeleccionada.setTime(fechaSeleccionada);
        calFechaSeleccionada.set(Calendar.HOUR_OF_DAY, 0);
        calFechaSeleccionada.set(Calendar.MINUTE, 0);
        calFechaSeleccionada.set(Calendar.SECOND, 0);
        calFechaSeleccionada.set(Calendar.MILLISECOND, 0);

        Calendar calHoy = Calendar.getInstance();
        calHoy.set(Calendar.HOUR_OF_DAY, 0);
        calHoy.set(Calendar.MINUTE, 0);
        calHoy.set(Calendar.SECOND, 0);
        calHoy.set(Calendar.MILLISECOND, 0);

        Date fechaSeleccionadaSinTiempo = calFechaSeleccionada.getTime();
        Date fechaHoySinTiempo = calHoy.getTime();

        if (fechaSeleccionadaSinTiempo.before(fechaHoySinTiempo)) {
            Utils.mensajeError(LiteralesTexto.ERROR_FECHA_RANGO);
            return false;
        }
        return true;
    }

    private Matricula getDatosMatricula(Matricula matricula){
        //matricula.setAlumno(alumnosFacade.findAlumnoById(Integer.parseInt(txtIdAlumno.getText())));
        matricula.setAlumno(alumnosFacade.findAlumnoById(Integer.parseInt("2")));
        matricula.setCodigoBarras(txtCodBarras.getText());
        matricula.setFechaMatricula(jdchFechaMatricula.getDate());
        //matricula.setHorario(horarioFacade.findHorarioById(Integer.parseInt(txtIdHorario.getText())));
        matricula.setHorario(horarioFacade.findHorarioById(Integer.parseInt("3")));
        matricula.setMontoPago(new BigDecimal(txtMontoPago.getText()));
        matricula.setObservaciones(taObervaciones.getText());
        return matricula;
    }

    private void listarMatriculas(int paginaActual, int tamanioPagina) {
        totalPaginas = horarioFacade.obtenerTotalPaginas(tamanioPagina);

        List<Matricula> listaMatriculas = matriculaFacade.listarEntidadesPaginadas(paginaActual, tamanioPagina);

        // Actualizar el JLabel con la página actual
        lblPaginaActual.setText("Página " + paginaActual + " de " + totalPaginas);

        // Mostrar en la tabla
        listarMatriculas(listaMatriculas);
        actualizarEstadoBotones();// Actualizar el estado de los botones

    }

    private void actualizarEstadoBotones() {
        btnAnterior.setEnabled(paginaActual > 1);
        btnSiguiente.setEnabled(paginaActual < totalPaginas);
    }

    private void listarMatriculas(List<Matricula> lista){
        // Selecciona el primer tab en un JTabbedPane
        tphMatricula.setSelectedIndex(0);

        modelo = Utils.generarModeloTabla(nombreColumnas);

        // Asignar el modelo a la tabla
        tblMatriculas.setModel(modelo);
        // Asegurar que la cabecera de la tabla se muestre y se mueva
        jspMatricula.setColumnHeaderView(tblMatriculas.getTableHeader());

        int[] anchoColumnas = {15, 15, 20, 30, 20, 20,40,15, 20,20,20,20,20,40,15,25,20, 20,20, 10, 15,15,15}; // Anchos específicos para cada columna
        Utils.setAnchoColumnas(tblMatriculas, anchoColumnas);
        Utils.ocultarColumnas(tblMatriculas, 0);//ocultar la primera columna
        Utils.ocultarColumnas(tblMatriculas, 1);//
        Utils.ocultarColumnas(tblMatriculas, 4);
        Utils.ocultarColumnas(tblMatriculas, 5);
        Utils.ocultarColumnas(tblMatriculas, 6);
        Utils.ocultarColumnas(tblMatriculas, 7);//
        Utils.ocultarColumnas(tblMatriculas, 8);
        Utils.ocultarColumnas(tblMatriculas, 12);
        Utils.ocultarColumnas(tblMatriculas, 13);
        Utils.ocultarColumnas(tblMatriculas, 14);
        Utils.ocultarColumnas(tblMatriculas, 15);
        Utils.ocultarColumnas(tblMatriculas, 16);
        Utils.ocultarColumnas(tblMatriculas, 17);

        // limpia los datos existentes en la tabla.
        Utils.limpiarModeloTabla(modelo, tblMatriculas);

        // Verificar si la lista de socios tiene elementos
        if (lista.size() > 0) {

            // Iterar sobre la lista de canchas y agregar cada cancha a la tabla
            for (Matricula matricula : lista) {

                // Crea un array de objetos con los datos de la cancha para agregar a la tabla.
                Object[] fila = new Object[]{
                    matricula.getIdMatricula(),
                    //datos del alumno
                    matricula.getAlumno().getIdAlumno(),
                    //dni
                    matricula.getAlumno().getNombreAlumno(),
                    matricula.getAlumno().getApellidoAlumno(),
                    Utils.getFechaFormateada(matricula.getAlumno().getFechaNacimiento()),
                    //nacionalidad
                    matricula.getAlumno().getCategoria(),
                    //edad caluclar
                    //sexo
                    matricula.getAlumno().getPadre().getNombrePadre()+matricula.getAlumno().getPadre().getApellidoPadre(),
                    matricula.getAlumno().getPadre().getTelefono(),
                    //datos del horario
                    matricula.getHorario().getIdHorario(),
                    matricula.getHorario().getDia(),
                    matricula.getHorario().getHoraInicio(),
                    matricula.getHorario().getHoraFin(),
                    matricula.getHorario().getCancha().getId_lugar().getNombre(),
                    matricula.getHorario().getCancha().getNombre(),
                    matricula.getHorario().getProfesor().getNombreProfesor()+matricula.getHorario().getProfesor().getApellidoProfesor(),
                    matricula.getHorario().getProfesor().getTelefono(),
                    //--
                    matricula.getObservaciones(),
                    matricula.getCodigoBarras(),
                    matricula.getMontoPago().toString(),
                    matricula.getFechaMatricula(),
                    //estado del pago
                    LiteralesTexto.LITERAL_VER,
                    LiteralesTexto.LITERAL_EDITAR,
                    LiteralesTexto.LITERAL_ELIMINAR
                };
                modelo.addRow(fila); // Agregar la fila al modelo de la tabla
            }
            // Establece un renderizador personalizado para las celdas de la tabla.
            tblMatriculas.setDefaultRenderer(Object.class, new Utils(18));

            // Establece el modo de selección de filas para permitir solo una selección a la vez.
            tblMatriculas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

            Utils.configurarEstiloTabla(tblMatriculas, jspMatricula);
            Utils.configurarBotonesAccion(tblMatriculas);


        }
    }

    private void habilitarCampos(boolean band){
        if(indicador == 0){
            jcbEstadoPago.setSelectedIndex(0);
            jcbEstadoPago.setEnabled(band);
            jcbSexo.setSelectedIndex(0);
            jcbSexo.setEnabled(band);
        } else{
            jcbEstadoPago.setEnabled(band);
            jcbSexo.setEnabled(band);
        }

        txtDniAlumno.setEditable(band);
        jdchFechaMatricula.setEnabled(band);
        txtMontoPago.setEditable(band);
        txtCodBarras.setEditable(band);
        taObervaciones.setEditable(band);
    }

    private void limpiarCampos(){
        txtDniAlumno.setText(LiteralesTexto.LITERAL_CADENA_VACIA);
        //datos del alumno
        txtIdAlumno.setText(LiteralesTexto.LITERAL_CADENA_VACIA);
        txtNombresAlumno.setText(LiteralesTexto.LITERAL_CADENA_VACIA);
        txtApellidosMatricula.setText(LiteralesTexto.LITERAL_CADENA_VACIA);
        txtFechaNac.setText(LiteralesTexto.LITERAL_CADENA_VACIA);
        txtNacionalidadAlumno.setText(LiteralesTexto.LITERAL_CADENA_VACIA);
        txtCategoriaAlumno.setText(LiteralesTexto.LITERAL_CADENA_VACIA);
        txtEdadAlumno.setText(LiteralesTexto.LITERAL_CADENA_VACIA);
        jcbSexo.setSelectedIndex(0);
        txtNombresPadre.setText(LiteralesTexto.LITERAL_CADENA_VACIA);
        txtTelefPadre.setText(LiteralesTexto.LITERAL_CADENA_VACIA);
        //datos del horario
        txtIdHorario.setText(LiteralesTexto.LITERAL_CADENA_VACIA);
        txtDiasHorarioProf.setText(title);
        txtLugarEntrenamiento.setText(title);
        txtCancha.setText(title);
        txtNombresProf.setText(title);
        txtTelefProfesor.setText(title);
        //--
        taObervaciones.setText(title);
        jcbEstadoPago.setSelectedIndex(0);
        txtCodBarras.setText(title);
        txtMontoPago.setText(title);
        jdchFechaMatricula.setDate(Utils.getFechaActual());
        lblFotoAlumno.setIcon(null);
    }

    private void mostarDatosAlumno(String dni){
     alumno=alumnosFacade.findAlumnoByDni(dni);
     if(alumno!=null){
         txtIdAlumno.setText(""+alumno.getIdAlumno());
         txtNombresAlumno.setText(alumno.getNombreAlumno());
         txtFechaNac.setText(Utils.getFechaFormateada(alumno.getFechaNacimiento()));
         txtNacionalidadAlumno.setText(alumno.getNacionalidad());
         jcbSexo.setSelectedItem(alumno.getSexo());
         txtCategoriaAlumno.setText(alumno.getCategoria().getNombre());
         txtNombresPadre.setText(alumno.getPadre().getNombrePadre()+" "+alumno.getPadre().getApellidoPadre());
         txtTelefPadre.setText(alumno.getPadre().getTelefono());

         //para calcular la edad
           Date fechaNacimiento = alumno.getFechaNacimiento(); // Obtener la fecha de nacimiento del alumno
           int edad = Utils.calcularEdad(fechaNacimiento);
           txtEdadAlumno.setText(String.valueOf(edad)); // Convierte la edad a String
     }
    }
}
