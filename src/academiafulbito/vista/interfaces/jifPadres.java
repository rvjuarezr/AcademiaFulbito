/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jifCategorias.java
 *
 * Created on 02/08/2024, 02:42:40 PM
 */
package academiafulbito.vista.interfaces;

import academiafulbito.controlador.beans.PadreFacade;
import academiafulbito.modelo.entidades.Padre;
import academiafulbito.modelo.enums.Estado;
import academiafulbito.vista.utilidades.ButtonEditor;
import academiafulbito.vista.utilidades.ButtonRenderer;
import academiafulbito.vista.utilidades.LiteralesTexto;
import academiafulbito.vista.utilidades.Utils;
import java.awt.Dimension;
import java.util.List;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Walter Jair
 */
public class jifPadres extends javax.swing.JInternalFrame {

    JDesktopPane jdp;
    public static PadreFacade padreFacade;
    DefaultTableModel modelo;
    String[] nombreColumnas = {"ID", "Nombre", "Apellido", "Telefono", LiteralesTexto.LITERAL_VER, LiteralesTexto.LITERAL_EDITAR, LiteralesTexto.LITERAL_ELIMINAR};
    int indicador;//para saber si estamos en modo de edicion

    /** Creates new form jifCategorias */
    public jifPadres(JDesktopPane jdpModAF) {
        initComponents();
        jdp = jdpModAF;
        padreFacade = new PadreFacade();
        listarPadres(padreFacade.getListadoPadres());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tphPadres = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jspCategorias = new javax.swing.JScrollPane();
        tblPadres = new javax.swing.JTable();
        btnNuevoPadre = new org.edisoncor.gui.button.ButtonRound();
        jPanel2 = new javax.swing.JPanel();
        txtNombre = new org.edisoncor.gui.textField.TextFieldRoundBackground();
        txtApellido = new org.edisoncor.gui.textField.TextFieldRoundBackground();
        txtTelefono = new org.edisoncor.gui.textField.TextFieldRoundBackground();
        btnGuardar = new org.edisoncor.gui.button.ButtonRound();
        jLabel1 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();

        setBackground(new java.awt.Color(135, 135, 246));
        setClosable(true);
        setTitle("MANTENIMIENTO PADRES");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tphPadres.setFont(new java.awt.Font("Bookman Old Style", 1, 24));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jspCategorias.setBackground(new java.awt.Color(255, 255, 255));
        jspCategorias.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jspCategorias.setOpaque(false);

        tblPadres.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblPadres.setOpaque(false);
        jspCategorias.setViewportView(tblPadres);

        jPanel1.add(jspCategorias, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 850, 250));

        btnNuevoPadre.setBackground(new java.awt.Color(156, 156, 247));
        btnNuevoPadre.setText("+ PADRE");
        btnNuevoPadre.setFont(new java.awt.Font("Arial", 1, 18));
        btnNuevoPadre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoPadreActionPerformed(evt);
            }
        });
        jPanel1.add(btnNuevoPadre, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 10, 140, 50));

        tphPadres.addTab("LISTADO", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNombre.setEditable(false);
        txtNombre.setDescripcion("Nombre*");
        txtNombre.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        jPanel2.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 720, 40));

        txtApellido.setEditable(false);
        txtApellido.setDescripcion("Apellidos*");
        txtApellido.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        jPanel2.add(txtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 720, 40));

        txtTelefono.setEditable(false);
        txtTelefono.setDescripcion("Telefono*");
        txtTelefono.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        jPanel2.add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, 720, 40));

        btnGuardar.setBackground(new java.awt.Color(156, 156, 247));
        btnGuardar.setBorder(null);
        btnGuardar.setText("AÑADIR");
        btnGuardar.setBorderPainted(true);
        btnGuardar.setContentAreaFilled(true);
        btnGuardar.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel2.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(622, 265, 170, 70));

        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("NUEVO PADRE");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, 250, 20));

        btnCancelar.setFont(new java.awt.Font("Bookman Old Style", 1, 18));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/academiafulbito/vista/imagenes/volver.png"))); // NOI18N
        btnCancelar.setText("VOLVER");
        btnCancelar.setContentAreaFilled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel2.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 270, 220, 70));

        tphPadres.addTab("REGISTRO", jPanel2);

        getContentPane().add(tphPadres, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 890, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoPadreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoPadreActionPerformed
        // TODO add your handling code here:
        indicador = 0;//para poder guardar
        tphPadres.setSelectedIndex(1);
        limpiarCampos();
        habilitarCampos(true);
    }//GEN-LAST:event_btnNuevoPadreActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        if (Utils.mensajeConfirmacion(LiteralesTexto.ESTA_SEGURO_GUARDAR_NUEVO_REGISTRO) == JOptionPane.YES_OPTION) {
            Padre padre = getDatosPadre();
            switch (indicador) {
                case 0://registrar categoria
                    padreFacade.guardarPadre(padre);
                    Utils.mensajeInformacion(LiteralesTexto.REGISTRO_GUARDADO_CORRECTAMENTE);
                    break;
                case 1://actualizar categoria
                    break;
            }

            listarPadres(padreFacade.getListadoPadres());
            limpiarCampos();
            habilitarCampos(false);
            indicador = 0;
            tphPadres.setSelectedIndex(0);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        limpiarCampos();
        habilitarCampos(false);
        tphPadres.setSelectedIndex(0);
    }//GEN-LAST:event_btnCancelarActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private org.edisoncor.gui.button.ButtonRound btnGuardar;
    private org.edisoncor.gui.button.ButtonRound btnNuevoPadre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jspCategorias;
    private javax.swing.JTable tblPadres;
    private javax.swing.JTabbedPane tphPadres;
    private org.edisoncor.gui.textField.TextFieldRoundBackground txtApellido;
    private org.edisoncor.gui.textField.TextFieldRoundBackground txtNombre;
    private org.edisoncor.gui.textField.TextFieldRoundBackground txtTelefono;
    // End of variables declaration//GEN-END:variables

    private void listarPadres(List<Padre> listaPadres) {
        // Selecciona el primer tab en un JTabbedPane
        tphPadres.setSelectedIndex(0);

        modelo = Utils.generarModeloTabla(nombreColumnas);

        // Asignar el modelo a la tabla
        tblPadres.setModel(modelo);

        int[] anchoColumnas = {15, 60, 20, 20, 20, 30, 30}; // Anchos específicos para cada columna
        Utils.setAnchoColumnas(tblPadres, anchoColumnas);
        Utils.ocultarColumnas(tblPadres, 0);

        // limpia los datos existentes en la tabla.
        Utils.limpiarModeloTabla(modelo, tblPadres);

        // Verificar si la lista de socios tiene elementos
        if (listaPadres.size() > 0) {
            System.out.println("LISTADO DE PADRES DESDE LA BBDD");
            // Iterar sobre la lista de categorias y agregar cada categoria a la tabla
            for (Padre padre : listaPadres) {

                System.out.println("padre.getIdPadre():" + padre.getIdPadre() + " ,padre.getNombrePadre():" + padre.getNombrePadre() + " ,padre.getApellidoPadre():" + padre.getApellidoPadre() + " ,padre.getTelefono():" + padre.getTelefono());

                // Crea un array de objetos con los datos de la categoria para agregar a la tabla.
                Object[] fila = new Object[]{
                    padre.getIdPadre(),
                    padre.getNombrePadre(),
                    padre.getApellidoPadre(),
                    padre.getTelefono(),
                    LiteralesTexto.LITERAL_VER,
                    LiteralesTexto.LITERAL_EDITAR,
                    LiteralesTexto.LITERAL_ELIMINAR
                };
                modelo.addRow(fila); // Agregar la fila al modelo de la tabla
            }
            // Establece un renderizador personalizado para las celdas de la tabla.
            tblPadres.setDefaultRenderer(Object.class, new Utils(18));

            // Establece el modo de selección de filas para permitir solo una selección a la vez.
            tblPadres.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

            tblPadres.setOpaque(false); // Hace la tabla transparente
            ((DefaultTableCellRenderer) tblPadres.getDefaultRenderer(Object.class)).setOpaque(false); // Hace las celdas transparentes
            tblPadres.setShowGrid(false); // Desactiva el grid para ocultar los bordes predeterminados
            tblPadres.setIntercellSpacing(new Dimension(0, 0)); // Elimina el espacio entre celdas
            jspCategorias.getViewport().setOpaque(false); // Hace el viewport transparente

            // Agregar boton ver
            tblPadres.getColumn(LiteralesTexto.LITERAL_VER).setCellRenderer(new ButtonRenderer(LiteralesTexto.LITERAL_VER));
            tblPadres.getColumn(LiteralesTexto.LITERAL_VER).setCellEditor(new ButtonEditor(LiteralesTexto.LITERAL_VER));

            // Agregar boton Editar
            tblPadres.getColumn(LiteralesTexto.LITERAL_EDITAR).setCellRenderer(new ButtonRenderer(LiteralesTexto.LITERAL_EDITAR));
            tblPadres.getColumn(LiteralesTexto.LITERAL_EDITAR).setCellEditor(new ButtonEditor(LiteralesTexto.LITERAL_EDITAR));

            // Agregar boton Eliminar
            tblPadres.getColumn(LiteralesTexto.LITERAL_ELIMINAR).setCellRenderer(new ButtonRenderer(LiteralesTexto.LITERAL_ELIMINAR));
            tblPadres.getColumn(LiteralesTexto.LITERAL_ELIMINAR).setCellEditor(new ButtonEditor(LiteralesTexto.LITERAL_ELIMINAR));

        }
    }

    private Padre getDatosPadre() {
        String nombre = txtNombre.getText();
        String apellido = txtApellido.getText();
        String telefono = txtTelefono.getText();

        return new Padre(nombre, apellido, telefono);
    }

    private void limpiarCampos() {
        txtNombre.setText("");
        txtApellido.setText("");
        txtTelefono.setText("");
    }

    private void habilitarCampos(boolean band) {
        txtNombre.setEditable(band);
        txtApellido.setEditable(band);
        txtTelefono.setEditable(band);
    }
}
